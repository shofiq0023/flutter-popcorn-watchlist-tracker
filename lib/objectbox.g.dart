// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'models/entities/entry_category.dart';
import 'models/entities/watchlist_entry.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2823155504957445601),
      name: 'WatchlistEntry',
      lastPropertyId: const obx_int.IdUid(12, 6386424801143367599),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 1671872442805675341),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7432568704607605140),
            name: 'title',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 149009372834497810),
            name: 'isFinished',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6011186517623569291),
            name: 'isRecommendable',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7835583144869397266),
            name: 'isUpcoming',
            type: 1,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 3716725792581512356),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 3852977599253816649),
            name: 'updatedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 7659178542931101714),
            name: 'finishedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 5868564880215753310),
            name: 'estimatedReleaseDate',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 2289662213404622908),
            name: 'priority',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 6386424801143367599),
            name: 'categoryId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(1, 290440548427237458),
            relationTarget: 'EntryCategory')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 2814220138610795272),
      name: 'EntryCategory',
      lastPropertyId: const obx_int.IdUid(4, 5784436567121817249),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5300978709626280171),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2610491892562989515),
            name: 'categoryName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 5803402652380465026),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5784436567121817249),
            name: 'updatedAt',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[
        obx_int.ModelBacklink(
            name: 'watchlistEntries',
            srcEntity: 'WatchlistEntry',
            srcField: 'category')
      ])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(2, 2814220138610795272),
      lastIndexId: const obx_int.IdUid(1, 290440548427237458),
      lastRelationId: const obx_int.IdUid(0, 0),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [],
      retiredIndexUids: const [],
      retiredPropertyUids: const [8794483957213056548],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    WatchlistEntry: obx_int.EntityDefinition<WatchlistEntry>(
        model: _entities[0],
        toOneRelations: (WatchlistEntry object) => [object.category],
        toManyRelations: (WatchlistEntry object) => {},
        getId: (WatchlistEntry object) => object.id,
        setId: (WatchlistEntry object, int id) {
          object.id = id;
        },
        objectToFB: (WatchlistEntry object, fb.Builder fbb) {
          final titleOffset = fbb.writeString(object.title);
          fbb.startTable(13);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, titleOffset);
          fbb.addBool(3, object.isFinished);
          fbb.addBool(4, object.isRecommendable);
          fbb.addBool(5, object.isUpcoming);
          fbb.addInt64(6, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(7, object.updatedAt?.millisecondsSinceEpoch);
          fbb.addInt64(8, object.finishedAt?.millisecondsSinceEpoch);
          fbb.addInt64(9, object.estimatedReleaseDate?.millisecondsSinceEpoch);
          fbb.addInt64(10, object.priority);
          fbb.addInt64(11, object.category.targetId);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final updatedAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final finishedAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 20);
          final estimatedReleaseDateValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 22);
          final object = WatchlistEntry()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..title = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 6, '')
            ..isFinished =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 10, false)
            ..isRecommendable =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 12, false)
            ..isUpcoming =
                const fb.BoolReader().vTableGet(buffer, rootOffset, 14, false)
            ..createdAt = DateTime.fromMillisecondsSinceEpoch(
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 16, 0))
            ..updatedAt = updatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedAtValue)
            ..finishedAt = finishedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(finishedAtValue)
            ..estimatedReleaseDate = estimatedReleaseDateValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(estimatedReleaseDateValue)
            ..priority =
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.category.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.category.attach(store);
          return object;
        }),
    EntryCategory: obx_int.EntityDefinition<EntryCategory>(
        model: _entities[1],
        toOneRelations: (EntryCategory object) => [],
        toManyRelations: (EntryCategory object) => {
              obx_int.RelInfo<WatchlistEntry>.toOneBacklink(12, object.id,
                      (WatchlistEntry srcObject) => srcObject.category):
                  object.watchlistEntries
            },
        getId: (EntryCategory object) => object.id,
        setId: (EntryCategory object, int id) {
          object.id = id;
        },
        objectToFB: (EntryCategory object, fb.Builder fbb) {
          final categoryNameOffset = fbb.writeString(object.categoryName);
          fbb.startTable(5);
          fbb.addInt64(0, object.id);
          fbb.addOffset(1, categoryNameOffset);
          fbb.addInt64(2, object.createdAt.millisecondsSinceEpoch);
          fbb.addInt64(3, object.updatedAt?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final updatedAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final object = EntryCategory()
            ..id = const fb.Int64Reader().vTableGet(buffer, rootOffset, 4, 0)
            ..categoryName = const fb.StringReader(asciiOptimization: true)
                .vTableGet(buffer, rootOffset, 6, '')
            ..createdAt = DateTime.fromMillisecondsSinceEpoch(
                const fb.Int64Reader().vTableGet(buffer, rootOffset, 8, 0))
            ..updatedAt = updatedAtValue == null
                ? null
                : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
          obx_int.InternalToManyAccess.setRelInfo<EntryCategory>(
              object.watchlistEntries,
              store,
              obx_int.RelInfo<WatchlistEntry>.toOneBacklink(12, object.id,
                  (WatchlistEntry srcObject) => srcObject.category));
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [WatchlistEntry] entity fields to define ObjectBox queries.
class WatchlistEntry_ {
  /// See [WatchlistEntry.id].
  static final id =
      obx.QueryIntegerProperty<WatchlistEntry>(_entities[0].properties[0]);

  /// See [WatchlistEntry.title].
  static final title =
      obx.QueryStringProperty<WatchlistEntry>(_entities[0].properties[1]);

  /// See [WatchlistEntry.isFinished].
  static final isFinished =
      obx.QueryBooleanProperty<WatchlistEntry>(_entities[0].properties[2]);

  /// See [WatchlistEntry.isRecommendable].
  static final isRecommendable =
      obx.QueryBooleanProperty<WatchlistEntry>(_entities[0].properties[3]);

  /// See [WatchlistEntry.isUpcoming].
  static final isUpcoming =
      obx.QueryBooleanProperty<WatchlistEntry>(_entities[0].properties[4]);

  /// See [WatchlistEntry.createdAt].
  static final createdAt =
      obx.QueryDateProperty<WatchlistEntry>(_entities[0].properties[5]);

  /// See [WatchlistEntry.updatedAt].
  static final updatedAt =
      obx.QueryDateProperty<WatchlistEntry>(_entities[0].properties[6]);

  /// See [WatchlistEntry.finishedAt].
  static final finishedAt =
      obx.QueryDateProperty<WatchlistEntry>(_entities[0].properties[7]);

  /// See [WatchlistEntry.estimatedReleaseDate].
  static final estimatedReleaseDate =
      obx.QueryDateProperty<WatchlistEntry>(_entities[0].properties[8]);

  /// See [WatchlistEntry.priority].
  static final priority =
      obx.QueryIntegerProperty<WatchlistEntry>(_entities[0].properties[9]);

  /// See [WatchlistEntry.category].
  static final category = obx.QueryRelationToOne<WatchlistEntry, EntryCategory>(
      _entities[0].properties[10]);
}

/// [EntryCategory] entity fields to define ObjectBox queries.
class EntryCategory_ {
  /// See [EntryCategory.id].
  static final id =
      obx.QueryIntegerProperty<EntryCategory>(_entities[1].properties[0]);

  /// See [EntryCategory.categoryName].
  static final categoryName =
      obx.QueryStringProperty<EntryCategory>(_entities[1].properties[1]);

  /// See [EntryCategory.createdAt].
  static final createdAt =
      obx.QueryDateProperty<EntryCategory>(_entities[1].properties[2]);

  /// See [EntryCategory.updatedAt].
  static final updatedAt =
      obx.QueryDateProperty<EntryCategory>(_entities[1].properties[3]);

  /// see [EntryCategory.watchlistEntries]
  static final watchlistEntries =
      obx.QueryBacklinkToMany<WatchlistEntry, EntryCategory>(
          WatchlistEntry_.category);
}
